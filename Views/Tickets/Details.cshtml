@model TheIssueTracker.Models.Ticket

@using TheIssueTracker.Models.Enums;
@using TheIssueTracker.Services;
@using TheIssueTracker.Services.Interfaces;
@inject IBTFileService _FileService;
@inject IBTRolesService _RolesService;

@{
	ViewData["Title"] = "Details";
}

<div class="row">
	<div class="col-md-8">
		<div class="card">
			<div class="card-body task-detail">
				<div class="dropdown float-end">
					<a href="#" class="dropdown-toggle arrow-none card-drop" data-bs-toggle="dropdown" aria-expanded="false">
						<i class="mdi mdi-dots-vertical"></i>
					</a>
					<div class="dropdown-menu dropdown-menu-end">
						<!-- item-->
						<a asp-controller="Tickets" asp-action="Edit Ticket" class="dropdown-item">Edit</a>
						<!-- item-->
						<a asp-controller="Tickets" asp-action="Archive Ticket" class="dropdown-item">Archive</a>
						<!-- item-->
						<a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.Project!.Id" class="dropdown-item">View Project Details</a>

					</div>
				</div>
				<div class="d-flex mb-3">
					<img class="flex-shrink-0 me-3 rounded-circle avatar-md" alt="64x64" src="@_FileService.ConvertByteArrayToFile(Model.SubmitterUser.ImageFileData,Model.SubmitterUser.ImageFileType,DefaultImage.BTUserImage)">
					<div class="flex-grow-1">
						<h3 class="media-heading mt-0">@Model.Title</h3>
						<span>
							@if (Model.TicketStatus!.Name == "New")
							{
								<h5 class="badge bg-success">New Ticket</h5>
							}
							else if (Model.TicketStatus!.Name == "Development")
							{
								<h5 class="badge bg-info">In Development</h5>
							}
							else if (Model.TicketStatus!.Name == "Testing")
							{
								<h5 class="badge bg-warning">In Testing</h5>
							}
							else if (Model.TicketStatus!.Name == "Resolved")
							{
								<h5 class="badge bg-secondary">Resolved</h5>
							}
						</span>
					</div>
				</div>
				<p>
					@Model.Description
				</p>


				<div class="row task-dates mb-0 mt-2">
					<div class="col-lg-6">
						<h5 class="font-600 m-b-5">Start Date</h5>
						<p> @Model.Created.ToString("MM.dd.yyyy") <small class="text-muted">@Model.Created.ToString("HH:mm")</small></p>
					</div>

					<div class="col-lg-6">
						<h5 class="font-600 m-b-5">Project Status: </h5> 
						@if (Model.Project.Archived)
						{
							<h5 class="badge bg-secondary">Archived</h5>
						}
						else if (DateTime.UtcNow.Date > DateTime.SpecifyKind(Model.Project.EndDate, DateTimeKind.Utc).Date)
						{
							<h3 class="btn btn-danger">Overdue></h3>
						}
						else
						{
							<h5 class="badge bg-warning">In Progress</h5>
						}
						@*<p> @Model.Project.EndDate.ToString("MM.dd.yyyy") <small class="text-muted">@Model.Project.EndDate.ToString("HH:mm")</small></p>*@
					</div>
				</div>

				<h5 class="text-muted">Submitter:</h5>
				<h4>@Model.SubmitterUser!.FullName</h4>
				<br />

				@if (Model.DeveloperUserId is not null)
				{
					<h5 class="text-muted">Developer:</h5>
					<h4>@Model.DeveloperUser!.FullName</h4>
				}

				@if (Model.DeveloperUserId is null)
				{
					<div class="assign-team mt-3">
						<h5 class="text-muted">Assign Developer:</h5>
						@*For each Developer in Company*@
						<div>
							@foreach (BTUser user in (await _RolesService.GetUsersInRoleAsync("Developer", Model.Project.CompanyId)))
							{

								<a> <img class="rounded-circle avatar-sm" alt="64x64" src="@_FileService.ConvertByteArrayToFile(Model.SubmitterUser.ImageFileData,Model.SubmitterUser.ImageFileType,DefaultImage.BTUserImage)"> </a>

							}
							<a href="#"><span class="add-new-plus"><i class="mdi mdi-plus"></i> </span></a>
						</div>

					</div>
				}

				<div class="clearfix"></div>

				@*Ticket Attachments*@
				<div class="attached-files mt-3">
					<h5>Attached Files </h5>
					<ul class="list-inline files-list">
						<li class="list-inline-item file-box">
							<a href=""><img src="assets/images/attached-files/img-1.jpg" class="img-fluid img-thumbnail" alt="attached-img" width="80"></a>
							<p class="font-13 mb-1 text-muted"><small>File one</small></p>
						</li>
						<li class="list-inline-item file-box">
							<a href=""><img src="assets/images/attached-files/img-2.jpg" class="img-fluid img-thumbnail" alt="attached-img" width="80"></a>
							<p class="font-13 mb-1 text-muted"><small>Attached-2</small></p>
						</li>
						<li class="list-inline-item file-box">
							<a href=""><img src="assets/images/attached-files/img-3.jpg" class="img-fluid img-thumbnail" alt="attached-img" width="80"></a>
							<p class="font-13 mb-1 text-muted"><small>Dribbble shot</small></p>
						</li>
						<li class="list-inline-item file-box ms-2">
							<div class="fileupload add-new-plus">
								<span><i class="mdi-plus mdi"></i>Add file(s)</span>
								<input type="file" class="upload">
							</div>
						</li>
					</ul>
				</div>

			</div>
		</div>

	</div><!-- end col -->

	<div class="col-md-4">
		<div class="card">
			<div class="card-body">

				<h4 class="header-title mt-0 mb-3">Comments (@Model.TicketComments.Count)</h4>

				<div>
					@*Loop to show comments made for the Ticket*@
					@foreach (TicketComment comment in Model.TicketComments)
					{
						<li>
							<div class="d-flex mb-3">
								<div class="flex-shrink-0 me-3">
									<a><img class="rounded-circle avatar-sm" alt="64x64" src="@_FileService.ConvertByteArrayToFile(comment.User!.ImageFileData,comment.User!.ImageFileType,DefaultImage.BTUserImage)"></a>
								</div>
								<div class="flex-grow-1">
									<h5 class="mt-0">@comment.User!.FullName</h5><span>@comment.Created.ToString("MM.dd.yy")  <small class="text-muted">@comment.Created.ToString("HH:mm")</small></span>
									<p class="font-13 mb-0">
										@comment.Comment
									</p>
								</div>
							</div>

						</li>
					}


					<div class="d-flex mb-3">
						<div class=" me-3">
							<a href="#"> <img class="rounded-circle avatar-sm" alt="64x64" src="@_FileService.ConvertByteArrayToFile(Model.SubmitterUser.ImageFileData,Model.SubmitterUser.ImageFileType,DefaultImage.BTUserImage)"> </a>
						</div>
						<form asp-action="AddTicketComment" asp-controller="Tickets" enctype="multipart/form-data" method="post" class="flex-grow-1">
							<div asp-validation-summary="ModelOnly" class="text-danger"></div>
							<input type="hidden" asp-for="@Model.Id" name="TicketId">
							<input type="text" name="comment" class="form-control" placeholder="Add a comment...">
							<div class="form-group mt-2">
								<input type="submit" value="Add" class="btn btn-primary rounded-pill" />
							</div>
						</form>
					</div>

				</div>
			</div>
		</div>

	</div><!-- end col -->
</div>

