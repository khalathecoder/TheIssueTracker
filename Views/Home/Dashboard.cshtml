@model TheIssueTracker.Models.ViewModels.DashboardViewModel

@using Microsoft.AspNetCore.Identity
@using TheIssueTracker.Services.Interfaces
@using TheIssueTracker.Models.Enums

@inject UserManager<BTUser> UserManager
@inject IBTRolesService _rolesService;
@inject IBTProjectService _projectService;
@inject IBTCompanyService _companyService;
@inject IBTFileService _fileService;

@{
	ViewData["Title"] = "Dashboard";
	@* Instantiate the btUser *@
	BTUser? user = await UserManager.GetUserAsync(User);
}


@* Get The btUser FullName *@
<h2>Welcome back, @(user.FirstName)!</h2>
<span class="text-muted" style="font-size:x-large;">
	@* Company Name *@
	<strong>@user.Company.Name</strong>
</span>


<div>
	<div classxfont-weighteighteightgetainer-fluid">

		<!-- Info Pills -->
		<div class="row mt-2">
			<div class="col-lg-3 col-md-6 col-sm-6">
				<a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
					<div class="card text-center bg-info">
						<div class="body">
							<div class="p-15 text-light">
								<h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
								<span>On Track Projects</span>
							</div>
						</div>
					</div>
				</a>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6">
				<a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
					<div class="card text-center bg-secondary">
						<div class="body">
							<div class="p-15 text-light">
								<h3>@Model.Projects.Where(p => p.Archived is false).Count()</h3>
								<span>Total Active Projects</span>
							</div>
						</div>
					</div>
				</a>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6">
				<div class="card text-center bg-warning">
					<div class="body">
						<div class="p-15 text-light">
							<h3>@Model.Tickets.Where(t => !string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
							<span>Total Assigned Tickets</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6">
				<div class="card text-center bg-purple">
					<div class="body">
						<div class="p-15 text-white">
							<h3>
								@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()
							</h3>
							<span>Unassigned Tickets</span>
						</div>
					</div>
				</div>
			</div>
		</div>


		<div class="row">
			<div class="col-xl-6">
				<section class="card">
					<header class="card-header card-header-transparent">
						<div class="card-actions">
							<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
							<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
						</div>

						<h2 class="card-title">Latest Projects</h2>
					</header>
					<div class="card-body">
						@if (Model.Projects == null)
						{
							<h2>
								No projects have been created!
							</h2>
							<a class="btn btn-primary" asp-controller="Projects" asp-action="Create">+ Create Project</a>
						}
						<table id="datatable" class="table table-responsive-md table-striped mb-0">
							<thead>
								<tr>
									<th>Project</th>
									<th>Status</th>
									<th>&nbsp;</th>
								</tr>
							</thead>
							<tbody>
								@foreach (Project project in Model.Projects.OrderByDescending(p =>p.Created))
								{
									int priorityId = project.ProjectPriorityId;
									string priorityName = project.ProjectPriority.Name;

									<tr>
										<td>@project.Name</td>
										@switch (priorityId)
										{
											default:
												<td data-order="@priorityId"><span class="badge bg-success text-uppercase">@priorityName</span></td>
												break;
											case 2:
												<td data-order="@priorityId"><span class="badge bg-info text-uppercase">@priorityName</span></td>
												break;
											case 3:
												<td data-order="@priorityId"><span class="badge bg-warning text-uppercase">@priorityName</span></td>
												break;
											case 4:
												<td data-order="@priorityId"><span class="badge bg-danger text-uppercase">@priorityName</span></td>
												break;
										}
										<td>
											<a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" class="btn btn-info btn-xs">Details</a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</section>
			</div>
			<div class="col-xl-3">
				<section class="card h-100">
					<header class="card-header card-header-transparent">
						<div class="card-actions">
							<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
							<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
						</div>

						<h2 class="card-title">Project Priorities</h2>
					</header>
					<div class="card-body">
						<div id="chart3D"></div>
					</div>
				</section>
			</div>
			<div class="col-xl-3">
				<section class="card h-100">
					<header class="card-header card-header-transparent">
						<div class="card-actions">
							<a href="#" class="card-action card-action-toggle" data-card-toggle></a>
							<a href="#" class="card-action card-action-dismiss" data-card-dismiss></a>
						</div>

						<h2 class="card-title">Ticket Distribution</h2>
					</header>
					<div class="card-body">
						<div id="donut"></div>
					</div>
				</section>
			</div>
		</div>



	</div>
	<hr />


	@*<div class="mt-5 ">
		<div class="row">
			@* Projects Table
			<div class="col-4">
				<div class="bg-secondary">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Projects</h2>
						</div>
						<div class="card-body">
							@* [Copy and format table from Unassigned Tickets]
						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			@* Tickets Table
			<div class="col-4">
				<div class="bg-secondary">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Tickets</h2>
						</div>
						<div class="card-body">

							@* Copy and format table from Unassigned Tickets
						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			<div class="col-4 ">
				<div class="bg-dark">
					<div class="card">
						<div class="card-body">
							<div class="dropdown float-end">
								<a href="#" class="dropdown-toggle arrow-none card-drop" data-bs-toggle="dropdown" aria-expanded="false">
									<i class="mdi mdi-dots-vertical"></i>
								</a>
								<div class="dropdown-menu dropdown-menu-end">
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Action</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Another action</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Something else</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Separated link</a>
								</div>
							</div>

							<h4 class="header-title mt-0 mb-3">Current Members</h4>

							<ul class="list-group mb-0 user-list">
								@foreach (BTUser btuser in Model.Company.Members)
								{														
								<li class="list-group-item">
									<a href="#" class="user-list-item">
										<div class="user avatar-sm float-start me-2">
												<img src="@_fileService.ConvertByteArrayToFile(btuser!.ImageFileData,btuser!.ImageFileType,DefaultImage.BTUserImage)" alt="" class="img-fluid rounded-circle">
										</div>
										<div class="user-desc">
											<h5 class="name mt-0 mb-1">@btuser.FullName</h5>
											<p class="desc text-muted mb-0 font-12">@btuser.Email</p>
										</div>
									</a>
								</li>		
								}
							</ul>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>*@




</div>

@section Scripts{
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<!--Google Charts-->
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>

	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/GglProjectPriority",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//3D Pie
					var options = {
						title: 'Project Priority',
						is3D: true,
						chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
						legend: { position: 'bottom' }

					};

					var chart = new google.visualization.PieChart($("#chart3D")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>
	<script type="text/javascript">
		google.load("visualization", "1", { packages: ["corechart"] });
		google.setOnLoadCallback(drawChart);
		function drawChart() {
			$.ajax({
				type: "POST",
				url: "/Home/GglProjectPriority",
				data: '{}',
				contentType: "application/json; charset=utf-8",
				dataType: "json",
				success: function (result) {
					var data = google.visualization.arrayToDataTable(result);

					//Donut
					var options = {
						title: 'Company Ticket Distribution',
						pieHole: 0.3,
						chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
						legend: { position: 'bottom' }
					};
					var chart = new google.visualization.PieChart($("#donut")[0]);
					chart.draw(data, options);
				},
				failure: function (rresult) {
					alert(result.d);
				},
				error: function (result) {
					alert(result.d);
				}
			});
		}
	</script>
}